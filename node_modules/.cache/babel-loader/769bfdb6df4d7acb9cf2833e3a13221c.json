{"ast":null,"code":"var _jsxFileName = \"/Users/yvesmanigault/Documents/Candidature Anna/web dev/react/tenzies-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Die from \"./components/Die\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(allNewDice());\n  }\n\n  function holdDice(id) {\n    alert(id);\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"FBcbDbTSXYNs4QNsRKPH911OvUI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yvesmanigault/Documents/Candidature Anna/web dev/react/tenzies-game/src/App.js"],"names":["Die","React","nanoid","App","dice","setDice","useState","allNewDice","newDice","i","push","value","Math","ceil","random","isHeld","id","rollDice","holdDice","alert","diceElements","map","die"],"mappings":";;;AACA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAGA,eAAe,SAASC,GAAT,GAAc;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAeC,UAAU,EAAzB,CAAxB;;AAEA,WAASA,UAAT,GAAqB;AACnB,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmBA,CAAC,EAApB,EAAuB;AACrBD,MAAAA,OAAO,CAACE,IAAR,CAAa;AACXC,QAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAc,CAAxB,CADI;AAEXC,QAAAA,MAAM,EAAE,KAFG;AAGXC,QAAAA,EAAE,EAAEd,MAAM;AAHC,OAAb;AAMD;;AACD,WAAOM,OAAP;AACD;;AAED,WAASS,QAAT,GAAmB;AACjBZ,IAAAA,OAAO,CAACE,UAAU,EAAX,CAAP;AACD;;AAED,WAASW,QAAT,CAAkBF,EAAlB,EAAqB;AACnBG,IAAAA,KAAK,CAACH,EAAD,CAAL;AACD;;AAGD,QAAMI,YAAY,GAAGhB,IAAI,CAACiB,GAAL,CAASC,GAAG,iBAAI,QAAC,GAAD;AAAkB,IAAA,KAAK,EAAGA,GAAG,CAACX,KAA9B;AAAqC,IAAA,MAAM,EAAEW,GAAG,CAACP,MAAjD;AAAyD,IAAA,QAAQ,EAAE,MAAIG,QAAQ,CAACI,GAAG,CAACN,EAAL;AAA/E,KAAUM,GAAG,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA,UAAhB,CAArB;AAGE,sBACQ;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACCI;AADD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEH,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAQH;;GArCuBd,G;;KAAAA,G","sourcesContent":["\nimport Die from \"./components/Die\"\nimport React from \"react\"\nimport {nanoid} from \"nanoid\"\n\n\nexport default function App(){\n\n  const [dice, setDice] = React.useState(allNewDice())\n\n  function allNewDice(){\n    const newDice = []\n    for(let i=0; i<10; i++){\n      newDice.push({\n        value: Math.ceil(Math.random()*6),\n        isHeld: false,\n        id: nanoid()\n\n      })\n    }\n    return newDice\n  }\n\n  function rollDice(){\n    setDice(allNewDice())\n  }\n\n  function holdDice(id){\n    alert(id)\n  }\n\n\n  const diceElements = dice.map(die => <Die key={die.id} value= {die.value} isHeld={die.isHeld} holdDice={()=>holdDice(die.id)}/>)\n\n\n    return(\n            <main>\n                <div className=\"dice-container\">\n                {diceElements}\n                </div>\n                <button className=\"roll-dice\" onClick={rollDice}>Roll</button>\n            </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}
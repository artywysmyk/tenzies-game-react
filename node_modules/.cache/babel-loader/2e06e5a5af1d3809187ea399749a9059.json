{"ast":null,"code":"var _jsxFileName = \"/Users/yvesmanigault/Documents/Candidature Anna/web dev/react/tenzies-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Die from \"./components/Die\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  const [click, setClick] = React.useState(0);\n  const [timer, setTimer] = React.useState({\n    minutes: 0,\n    seconds: 0\n  });\n\n  function stopwatcher() {}\n\n  React.useEffect(() => {\n    /*check if all dice are held and if all dice have the same value*/\n    const allHeld = dice.every(dice => dice.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(dice => dice.value === firstValue);\n\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n      console.log(\"you won!\");\n    }\n  }, [dice]);\n\n  function generateNewDice() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function trackClicks() {\n    setClick(prevClick => prevClick + 1);\n    console.log(click);\n  }\n  /* \n  if click === 0 I want to console.log the time of the click on the button and save it to variable\n  \n  const date = new Date()\n  const now = date.getHours() * 60 + date.getMinutes()\n  console.log(now)\n  when the game is over I want to console.log the time and substract the time we started*/\n\n\n  function getTheTime() {\n    const today = new Date();\n    const now = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDice());\n    }\n\n    return newDice;\n  }\n\n  function reset() {\n    setTenzies(false);\n    setDice(allNewDice());\n    setClick(0);\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      getTheTime();\n      trackClicks();\n      setDice(oldDice => oldDice.map(dice => {\n        return dice.isHeld ? dice : generateNewDice();\n      }));\n    } else {\n      reset();\n    }\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(dice => {\n      return dice.id === id ? { ...dice,\n        isHeld: !dice.isHeld\n      } : dice;\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: tenzies ? \"Start Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Rolls: \", click]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-tracker\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Time Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"do8DkXmnga6hFDpE8eJFjOGivig=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yvesmanigault/Documents/Candidature Anna/web dev/react/tenzies-game/src/App.js"],"names":["Die","React","nanoid","Confetti","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","click","setClick","timer","setTimer","minutes","seconds","stopwatcher","useEffect","allHeld","every","isHeld","firstValue","value","allSameValue","console","log","generateNewDice","Math","ceil","random","id","trackClicks","prevClick","getTheTime","today","Date","now","getHours","getMinutes","getSeconds","newDice","i","push","reset","rollDice","oldDice","map","holdDice","diceElements","die"],"mappings":";;;AACA,OAAOA,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAGA,eAAe,SAASC,GAAT,GAAc;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAeC,UAAU,EAAzB,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACM,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACM,QAAN,CAAe;AACvCQ,IAAAA,OAAO,EAAE,CAD8B;AAEvCC,IAAAA,OAAO,EAAE;AAF8B,GAAf,CAA1B;;AAKA,WAASC,WAAT,GAAsB,CAErB;;AAGDhB,EAAAA,KAAK,CAACiB,SAAN,CAAiB,MAAI;AACnB;AACA,UAAMC,OAAO,GAAGd,IAAI,CAACe,KAAL,CAAWf,IAAI,IAAGA,IAAI,CAACgB,MAAvB,CAAhB;AACA,UAAMC,UAAU,GAAGjB,IAAI,CAAC,CAAD,CAAJ,CAAQkB,KAA3B;AACA,UAAMC,YAAY,GAAGnB,IAAI,CAACe,KAAL,CAAWf,IAAI,IAAGA,IAAI,CAACkB,KAAL,KAAeD,UAAjC,CAArB;;AACA,QAAGH,OAAO,IAAIK,YAAd,EAA2B;AACzBd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,GATD,EASG,CAACrB,IAAD,CATH;;AAWF,WAASsB,eAAT,GAA0B;AACxB,WAAO;AACJJ,MAAAA,KAAK,EAAEK,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAc,CAAxB,CADH;AAEHT,MAAAA,MAAM,EAAE,KAFL;AAGHU,MAAAA,EAAE,EAAE7B,MAAM;AAHP,KAAP;AAKD;;AAED,WAAS8B,WAAT,GAAsB;AACpBpB,IAAAA,QAAQ,CAACqB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASuB,UAAT,GAAqB;AACrB,UAAMC,KAAK,GAAE,IAAIC,IAAJ,EAAb;AACA,UAAMC,GAAG,GAAGF,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBH,KAAK,CAACI,UAAN,EAAzB,GAA8C,GAA9C,GAAoDJ,KAAK,CAACK,UAAN,EAAhE;AACC;;AAEC,WAAShC,UAAT,GAAqB;AACnB,UAAMiC,OAAO,GAAG,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,EAAf,EAAmBA,CAAC,EAApB,EAAuB;AACrBD,MAAAA,OAAO,CAACE,IAAR,CAAahB,eAAe,EAA5B;AAED;;AACD,WAAOc,OAAP;AACD;;AAED,WAASG,KAAT,GAAgB;AACdlC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACEJ,IAAAA,OAAO,CAACE,UAAU,EAAX,CAAP;AACAI,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACH;;AAED,WAASiC,QAAT,GAAmB;AACjB,QAAG,CAACpC,OAAJ,EAAY;AACVyB,MAAAA,UAAU;AACVF,MAAAA,WAAW;AACX1B,MAAAA,OAAO,CAACwC,OAAO,IAAEA,OAAO,CAACC,GAAR,CAAY1C,IAAI,IAAE;AACnC,eAAOA,IAAI,CAACgB,MAAL,GACPhB,IADO,GAEPsB,eAAe,EAFf;AAGD,OAJkB,CAAV,CAAP;AAKD,KARD,MAQO;AACLiB,MAAAA,KAAK;AACN;AACF;;AAED,WAASI,QAAT,CAAkBjB,EAAlB,EAAqB;AACnBzB,IAAAA,OAAO,CAACwC,OAAO,IAAGA,OAAO,CAACC,GAAR,CAAY1C,IAAI,IAAE;AAClC,aAAOA,IAAI,CAAC0B,EAAL,KAAYA,EAAZ,GACL,EAAC,GAAG1B,IAAJ;AAAUgB,QAAAA,MAAM,EAAE,CAAChB,IAAI,CAACgB;AAAxB,OADK,GAELhB,IAFF;AAGD,KAJiB,CAAX,CAAP;AAKD;;AAGD,QAAM4C,YAAY,GAAG5C,IAAI,CAAC0C,GAAL,CAASG,GAAG,iBAAI,QAAC,GAAD;AAAkB,IAAA,KAAK,EAAGA,GAAG,CAAC3B,KAA9B;AAAqC,IAAA,MAAM,EAAE2B,GAAG,CAAC7B,MAAjD;AAAyD,IAAA,QAAQ,EAAE,MAAI2B,QAAQ,CAACE,GAAG,CAACnB,EAAL;AAA/E,KAAUmB,GAAG,CAACnB,EAAd;AAAA;AAAA;AAAA;AAAA,UAAhB,CAArB;AAGE,sBACQ;AAAA,eACGtB,OAAO,iBACN,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAMA;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAOI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACCwC;AADD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEJ,QAAvC;AAAA,gBAAkDpC,OAAO,GAAG,YAAH,GAAkB;AAA3E;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAA,4BAAaE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAkBI;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAE+B,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAsBH;;GAnHuBxC,G;;KAAAA,G","sourcesContent":["\nimport Die from \"./components/Die\"\nimport React from \"react\"\nimport {nanoid} from \"nanoid\"\nimport Confetti from 'react-confetti'\n\n\nexport default function App(){\n\n  const [dice, setDice] = React.useState(allNewDice())\n  const [tenzies, setTenzies] = React.useState(false)\n  const [click, setClick] = React.useState(0)\n  const [timer, setTimer] = React.useState({\n    minutes: 0,\n    seconds: 0\n  })\n\n  function stopwatcher(){\n\n  }\n\n\n  React.useEffect( ()=>{\n    /*check if all dice are held and if all dice have the same value*/\n    const allHeld = dice.every(dice=> dice.isHeld)\n    const firstValue = dice[0].value\n    const allSameValue = dice.every(dice=> dice.value === firstValue)\n    if(allHeld && allSameValue){\n      setTenzies(true)\n      console.log(\"you won!\")\n    }\n  }, [dice])\n\nfunction generateNewDice(){\n  return {\n     value: Math.ceil(Math.random()*6),\n      isHeld: false,\n      id: nanoid()\n  }\n}\n\nfunction trackClicks(){\n  setClick(prevClick => prevClick + 1)\n  console.log(click)\n}\n\n/* \nif click === 0 I want to console.log the time of the click on the button and save it to variable\n\nconst date = new Date()\nconst now = date.getHours() * 60 + date.getMinutes()\nconsole.log(now)\nwhen the game is over I want to console.log the time and substract the time we started*/\n\nfunction getTheTime(){\nconst today= new Date()\nconst now = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds()\n}\n\n  function allNewDice(){\n    const newDice = []\n    for(let i=0; i<10; i++){\n      newDice.push(generateNewDice()\n      )\n    }\n    return newDice\n  }\n\n  function reset(){\n    setTenzies(false)\n      setDice(allNewDice())\n      setClick(0)\n  }\n\n  function rollDice(){\n    if(!tenzies){\n      getTheTime()\n      trackClicks()\n      setDice(oldDice=>oldDice.map(dice=>{\n      return dice.isHeld ?\n      dice :\n      generateNewDice()\n    }))\n    } else {\n      reset()\n    }\n  }\n\n  function holdDice(id){\n    setDice(oldDice=> oldDice.map(dice=>{\n      return dice.id === id \n      ? {...dice, isHeld: !dice.isHeld}\n      : dice\n    }) )\n  }\n\n\n  const diceElements = dice.map(die => <Die key={die.id} value= {die.value} isHeld={die.isHeld} holdDice={()=>holdDice(die.id)}/>)\n\n\n    return(\n            <main>\n              {tenzies &&\n                <Confetti\n                />\n              }\n              <h1 className=\"title\">Tenzies</h1>\n            <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n                <div className=\"dice-container\">\n                {diceElements}\n                </div>\n                <button className=\"roll-dice\" onClick={rollDice}>{tenzies ? \"Start Game\" : \"Roll\"}</button>\n                <div>Rolls: {click}</div>\n                <div className=\"time-tracker\">\n                  <div>Time Tracker</div>\n                  <button>Start</button>\n                  <button>Stop</button>\n                  <div>{timer}</div>\n                </div>\n                <button className=\"reset\" onClick={reset}>Reset</button>\n            </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}
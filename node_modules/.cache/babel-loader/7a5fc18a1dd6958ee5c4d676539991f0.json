{"ast":null,"code":"var _jsxFileName = \"/Users/yvesmanigault/Documents/Candidature Anna/web dev/react/tenzies-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Die from \"./components/Die\";\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  const [numRolls, setNumRolls] = React.useState(0);\n  /* Winning the game*/\n\n  React.useEffect(() => {\n    /*check if all dice are held and if all dice have the same value*/\n    const allHeld = dice.every(dice => dice.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(dice => dice.value === firstValue);\n\n    if (allHeld && allSameValue) {\n      setTenzies(true);\n    }\n  }, [dice]);\n\n  function generateNewDice() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDice());\n    }\n\n    return newDice;\n  }\n\n  function reset() {\n    setTenzies(false);\n    setDice(allNewDice());\n    setNumRolls(0);\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(dice => {\n        return dice.isHeld ? dice : generateNewDice();\n      }));\n      setNumRolls(prev => prev + 1);\n    } else {\n      reset();\n    }\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(dice => {\n      return dice.id === id ? { ...dice,\n        isHeld: !dice.isHeld\n      } : dice;\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"scores\",\n      children: [\"Rolls: \", numRolls, \" | Time: | Best time:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: tenzies ? \"Start again\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Rolls: \", numRolls]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"LkilHiBfqylcAJm5/6+2LxfcjHM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yvesmanigault/Documents/Candidature Anna/web dev/react/tenzies-game/src/App.js"],"names":["Die","React","nanoid","Confetti","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","numRolls","setNumRolls","useEffect","allHeld","every","isHeld","firstValue","value","allSameValue","generateNewDice","Math","ceil","random","id","newDice","i","push","reset","rollDice","oldDice","map","prev","holdDice","diceElements","die"],"mappings":"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","sourcesContent":["\nimport Die from \"./components/Die\"\nimport React from \"react\"\nimport {nanoid} from \"nanoid\"\nimport Confetti from 'react-confetti'\n\n\nexport default function App(){\n\n  const [dice, setDice] = React.useState(allNewDice())\n  const [tenzies, setTenzies] = React.useState(false)\n  const [numRolls, setNumRolls] = React.useState(0)\n\n\n /* Winning the game*/\n\n  React.useEffect( ()=>{\n    /*check if all dice are held and if all dice have the same value*/\n    const allHeld = dice.every(dice=> dice.isHeld)\n    const firstValue = dice[0].value\n    const allSameValue = dice.every(dice=> dice.value === firstValue)\n    if(allHeld && allSameValue){\n      setTenzies(true)\n    }\n  }, [dice])\n\n \n  \n\nfunction generateNewDice(){\n  return {\n     value: Math.ceil(Math.random()*6),\n      isHeld: false,\n      id: nanoid()\n  }\n}\n\n\n  function allNewDice(){\n    const newDice = []\n    for(let i=0; i<10; i++){\n      newDice.push(generateNewDice()\n      )\n    }\n    return newDice\n  }\n\n  function reset(){\n    setTenzies(false)\n      setDice(allNewDice())\n      setNumRolls(0)\n  }\n\n  function rollDice(){\n    if(!tenzies){\n      setDice(oldDice=>oldDice.map(dice=>{\n      return dice.isHeld ?\n      dice :\n      generateNewDice()\n    }))\n    setNumRolls(prev => prev + 1)\n    } else {\n      reset()\n    }\n  }\n\n  function holdDice(id){\n    setDice(oldDice=> oldDice.map(dice=>{\n      return dice.id === id \n      ? {...dice, isHeld: !dice.isHeld}\n      : dice\n    }) )\n  }\n\n\n  const diceElements = dice.map(die => <Die key={die.id} value= {die.value} isHeld={die.isHeld} holdDice={()=>holdDice(die.id)}/>)\n\n\n    return(\n            <main>\n              {tenzies &&\n                <Confetti\n                />\n              }\n              <h1 className=\"title\">Tenzies</h1>\n            <p className=\"instructions\">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.</p>\n                <p className=\"scores\">\n                Rolls: {numRolls} |\n                Time: |\n                Best time:\n            </p>\n                <div className=\"dice-container\">\n                {diceElements}\n                </div>\n                <button className=\"roll-dice\" onClick={rollDice}>{tenzies ? \"Start again\" : \"Roll\"}</button>\n                <div>Rolls: {numRolls}</div>\n                <button className=\"reset\" onClick={reset}>Reset</button>\n            </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}